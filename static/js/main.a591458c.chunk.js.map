{"version":3,"sources":["spinner.svg","App.js","index.js"],"names":["Tezos","TezosToolkit","wallet","BeaconWallet","name","preferredNetwork","NetworkType","CUSTOM","contractAddress","setWalletProvider","App","useState","activeAccount","setActiveAccount","React","post","setPost","posts","setPosts","loading","setLoading","sync","PermissionScope","OPERATION_REQUEST","SIGN","client","requestPermissions","network","type","rpcUrl","permissions","console","log","address","getActiveAccount","unsync","clearActiveAccount","useEffect","getAcc","axios","get","response","data","reverse","getposts","style","display","Button","onClick","justifyContent","width","marginTop","TextField","label","variant","value","onChange","event","target","length","fullWidth","at","contract","methods","default","send","mutez","amount","operation","confirmation","result","storage","resultas","author","concat","src","spinner","map","textAlign","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a591458c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/spinner.d99b4eae.svg\";","\nimport './App.css';\nimport { TezosToolkit } from \"@taquito/taquito\";\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\nimport { PermissionScope, NetworkType } from \"@airgap/beacon-sdk\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, TextField } from \"@material-ui/core\";\nimport axios from 'axios';\nimport spinner from './spinner.svg';\n\nconst Tezos = new TezosToolkit(\"https://rpc.ghostnet.teztnets.xyz\");\nconst wallet = new BeaconWallet({ name: \"ONCHAIN\", preferredNetwork: NetworkType.CUSTOM });\nconst contractAddress = \"KT1StWyhTJkNqL1o4PWjSF21sG4s9BTE9MmB\";\n\nTezos.setWalletProvider(wallet);\n\nfunction App() {\n  const [activeAccount, setActiveAccount] = useState();\n\n  const [post, setPost] = React.useState(\"\");\n  const [posts, setPosts] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n\n  const handleChange = (event) => {\n    if (event.target.value.length < 510) {\n      setPost(event.target.value);\n    }\n  };\n\n  useEffect(() => {\n    async function getAcc() {\n      setActiveAccount(await wallet.client.getActiveAccount());\n      if (activeAccount) {\n        console.log(activeAccount.address)\n        setActiveAccount(await wallet.client.getActiveAccount());\n      }\n    }\n    getAcc();\n  }, [activeAccount]);\n\n  useEffect(() => {\n    async function getposts() {\n      const response = await axios.get(\n        `https://api.ghostnet.tzkt.io/v1/contracts/${contractAddress}/bigmaps/posts/keys`\n      );\n      const data = response.data.reverse();\n      console.log(data)\n\n      setPosts(data)\n    }\n    getposts();\n  }, []);\n\n  async function sync() {\n    // You can request specific permissions if you want\n    const scopes = [\n      PermissionScope.OPERATION_REQUEST,\n      PermissionScope.SIGN,\n    ];\n\n    try {\n      const permissions = await wallet.client.requestPermissions({\n        network: {\n          type: NetworkType.CUSTOM,\n          name: \"Ghostnet\",\n          rpcUrl: \"https://rpc.ghostnet.teztnets.xyz\",\n        },\n      });\n      console.log(\"Got permissions:\", permissions.address);\n      setActiveAccount(await wallet.client.getActiveAccount());\n    } catch (error) {\n      console.log(\"Got error:\", error);\n    }\n  }\n\n  async function unsync() {\n    await wallet.clearActiveAccount();\n    setActiveAccount(await wallet.client.getActiveAccount());\n  }\n\n  return (\n    <div>\n      <div style={{ display: \"flex\" }}>\n        <Button\n          onClick={async () => {\n          }}\n        >\n          ONChain\n        </Button>\n\n        <Button\n          onClick={async () => {\n            if (activeAccount) {\n              unsync()\n            } else {\n              sync()\n            }\n          }}\n        >\n          {activeAccount ? \"unsync\" : \"sync\"}\n        </Button>\n      </div>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n\n        <div style={{ width: \"70vw\", marginTop: 20 }}>\n\n          <div>\n            <TextField\n              label=\"Type here\"\n              variant=\"outlined\"\n              value={post}\n              onChange={handleChange}\n              fullWidth\n            />\n\n            <Button\n              fullWidth\n              onClick={async () => {\n                setLoading(true)\n                const contract = await Tezos.wallet.at(contractAddress);\n                try {\n                  const operation = await contract.methods.default(\n                    post\n                  ).send({ mutez: true, amount: 0 });\n\n                  const result = await operation.confirmation();\n                  const resultas = await contract.storage();\n                  console.log(result);\n                  console.log(resultas);\n                  setPost(\"\")\n                  setPosts([\n                    {\n                      value: {\n                        author: activeAccount.address,\n                        post: post\n                      }\n                    },\n                  ].concat(posts))\n                  setLoading(false)\n                } catch (error) {\n                  console.log(error)\n                  setLoading(false)\n                }\n\n              }}\n            >\n              {loading ? <img src={spinner} style={{ width: 60 }} ></img> : \"Post\"}\n            </Button>\n\n            <div>\n              <br></br>\n              {posts &&\n                posts.map((post) => (\n                  <div key={post.key}>\n                    {post.value.post}\n                    <br></br>\n                    <div style={{ textAlign: \"right\" }}>\n                      {post.value.author}\n                    </div>\n                    <br></br>\n                    <br></br>\n                  </div>\n\n                ))\n              }\n            </div>\n          </div>\n\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}