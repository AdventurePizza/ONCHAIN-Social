{"version":3,"sources":["spinner.svg","ButtonGame.js","App.js","index.js"],"names":["Tezos","TezosToolkit","wallet","BeaconWallet","name","preferredNetwork","NetworkType","CUSTOM","setWalletProvider","ButtonGame","useState","secondsLeft","setSecondsLeft","minute","setMinute","second","setSecond","lastClick","setLastClick","prize","setPrize","lastClicker","setLastClicker","colors","setColors","gameState","setGameState","getStorage","axios","get","response","console","log","data","millis","Date","seconds","Math","floor","balanceRes","operationFee","clickerRes","clickCounter","value","colorsRes","useEffect","now","interval","setInterval","clearInterval","style","marginBottom","display","justifyContent","alignItems","fontSize","backgroundColor","address","i","length","key","getColor","padding","color","margin","marginInline","paddingRight","class","onClick","at","contract","methods","clickButton","send","mutez","amount","operation","confirmation","result","storage","resultas","textAlign","Button","endGame","startGame","contractAddress","App","activeAccount","setActiveAccount","React","post","setPost","posts","setPosts","loading","setLoading","sync","client","requestPermissions","network","type","rpcUrl","permissions","getActiveAccount","unsync","clearActiveAccount","getAcc","reverse","getposts","width","marginTop","TextField","label","variant","onChange","event","target","fullWidth","default","author","concat","alt","src","spinner","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.367873f4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/spinner.d99b4eae.svg\";","// @ts-nocheck\nimport React, { useEffect, useState } from 'react';\nimport './ButtonGame.css';\n\nimport axios from 'axios';\nimport { Button } from \"@material-ui/core\";\n\nimport { TezosToolkit } from \"@taquito/taquito\";\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\nimport { NetworkType } from \"@airgap/beacon-sdk\";\nconst Tezos = new TezosToolkit(\"https://rpc.ghostnet.teztnets.xyz\");\nconst wallet = new BeaconWallet({ name: \"ONCHAIN\", preferredNetwork: NetworkType.CUSTOM });\n\nTezos.setWalletProvider(wallet);\n\nexport const ButtonGame = () => {\n  //1660042341\n\n  const [secondsLeft, setSecondsLeft] = useState(1000);\n\n  const [minute, setMinute] = useState(12);\n  const [second, setSecond] = useState(59);\n\n  const [lastClick, setLastClick] = useState(1660042341);\n\n  const [prize, setPrize] = useState(0);\n  const [lastClicker, setLastClicker] = useState(0);\n  const [colors, setColors] = useState([]);\n\n  const [gameState, setGameState] = useState(-1);\n\n  useEffect(() => {\n    let millis = Date.now();\n    let seconds = Math.floor(millis / 1000);\n    console.log(seconds)\n    let secLeft = lastClick + 3600 - seconds;\n    setSecondsLeft(secLeft)\n  }, [lastClick]);\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      setSecondsLeft(secondsLeft => secondsLeft - 1);\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [secondsLeft]);\n\n  useEffect(() => {\n    setMinute(Math.floor(secondsLeft / 60))\n    setSecond(secondsLeft % 60)\n  }, [secondsLeft]);\n\n  async function getStorage() {\n    const response = await axios.get(\n      `https://api.ghostnet.tzkt.io/v1/contracts/KT1LTQAKNirVNk7C1bB7ji7rYPWgTytz8vwS/storage`\n    );\n\n    console.log(response.data)\n\n    const millis = new Date(response.data.lastClick);\n    let seconds = Math.floor(millis / 1000);\n    console.log(seconds)\n\n    const balanceRes = await axios.get(\n      `https://api.ghostnet.tzkt.io/v1/accounts/KT1LTQAKNirVNk7C1bB7ji7rYPWgTytz8vwS/balance`\n    );\n\n    console.log(balanceRes.data - response.data.operationFee)\n    setPrize(balanceRes.data - response.data.operationFee)\n    setLastClick(seconds)\n    setGameState(response.data.gameState)\n\n    const clickerRes = await axios.get(\n      `https://api.ghostnet.tzkt.io/v1/contracts/KT1LTQAKNirVNk7C1bB7ji7rYPWgTytz8vwS/bigmaps/clickers/keys`\n    );\n    setLastClicker((clickerRes.data[response.data.clickCounter - 1]).value)\n\n    const colorsRes = await axios.get(\n      `https://api.ghostnet.tzkt.io/v1/contracts/KT1LTQAKNirVNk7C1bB7ji7rYPWgTytz8vwS/bigmaps/colors/keys`\n    );\n    setColors(colorsRes.data)\n    console.log(colorsRes.data)\n  }\n\n  useEffect(() => {\n    getStorage();\n  }, []);\n\n  function getColor(address) {\n    console.log(\"test performance\")\n    for (let i = 0; i < colors.length; i++) {\n      if (colors[i].key === address) {\n        return colors[i].value;\n      }\n    }\n    return \"gray\"\n  }\n\n  return (\n    <div style={{ marginBottom: 100 }}>\n      {gameState == 1 && secondsLeft > 0 &&\n        <>\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n              <div>\n                <h1 style={{ fontSize: \"2em\" }}>{minute < 10 ? \"0\" + minute : minute}:{second < 10 ? \"0\" + second : second} </h1>\n                <b style={{ backgroundColor: getColor(lastClicker), padding: 10, color: \"black\" }}> {lastClicker}</b>\n              </div>\n            </div>\n            <div style={{ margin: 50, marginInline: 200, paddingRight: \"10%\" }}>\n\n              <div class=\"buttn\" onClick={\n                async () => {\n                  console.log(\"dont push the button !\")\n\n                  const contract = await Tezos.wallet.at(\"KT1LTQAKNirVNk7C1bB7ji7rYPWgTytz8vwS\");\n                  try {\n                    const operation = await contract.methods.clickButton().send({ mutez: true, amount: 1000000 });\n\n                    const result = await operation.confirmation();\n                    const resultas = await contract.storage();\n                    console.log(result);\n                    console.log(resultas);\n                    getStorage()\n                    setPrize()\n                  } catch (error) {\n                    console.log(error)\n                  }\n                }}>\n              </div>\n            </div>\n\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n              <h1 style={{ fontSize: \"2em\" }}>Prize: {prize / 1000000} XTZ </h1>\n            </div>\n          </div>\n          <div style={{ fontSize: \"2em\", textAlign: \"center\" }}>Press = 1 xtz</div>\n        </>\n      }\n\n      {gameState == 1 && secondsLeft <= 0 &&\n        <Button onClick={\n          async () => {\n            console.log(\"dont push the button !\")\n\n            const contract = await Tezos.wallet.at(\"KT1LTQAKNirVNk7C1bB7ji7rYPWgTytz8vwS\");\n            try {\n              const operation = await contract.methods.endGame().send();\n\n              const result = await operation.confirmation();\n              const resultas = await contract.storage();\n              console.log(result);\n              console.log(resultas);\n              getStorage()\n              setPrize()\n            } catch (error) {\n              console.log(error)\n            }\n          }\n        }>conclude game</Button>\n      }\n      {\n        gameState == 0 && <div>\n\n          <Button onClick={\n            async () => {\n              console.log(\"dont push the button !\")\n\n              const contract = await Tezos.wallet.at(\"KT1LTQAKNirVNk7C1bB7ji7rYPWgTytz8vwS\");\n              try {\n                const operation = await contract.methods.startGame().send({ mutez: true, amount: 10000000 });\n\n                const result = await operation.confirmation();\n                const resultas = await contract.storage();\n                console.log(result);\n                console.log(resultas);\n                getStorage()\n                setPrize()\n              } catch (error) {\n                console.log(error)\n              }\n            }\n          }>start game</Button>\n        </div>\n      }\n    </div>\n  );\n}\n\n","\nimport './App.css';\nimport { TezosToolkit } from \"@taquito/taquito\";\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\nimport { NetworkType } from \"@airgap/beacon-sdk\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, TextField } from \"@material-ui/core\";\nimport axios from 'axios';\nimport spinner from './spinner.svg';\nimport { ButtonGame } from \"./ButtonGame\";\n\nconst Tezos = new TezosToolkit(\"https://rpc.ghostnet.teztnets.xyz\");\nconst wallet = new BeaconWallet({ name: \"ONCHAIN\", preferredNetwork: NetworkType.CUSTOM });\nconst contractAddress = \"KT1StWyhTJkNqL1o4PWjSF21sG4s9BTE9MmB\";\n\nTezos.setWalletProvider(wallet);\n\nfunction App() {\n  const [activeAccount, setActiveAccount] = useState();\n\n  const [post, setPost] = React.useState(\"\");\n  const [posts, setPosts] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n\n  const [colors, setColors] = useState([]);\n\n  const handleChange = (event) => {\n    if (event.target.value.length < 510) {\n      setPost(event.target.value);\n    }\n  };\n\n  useEffect(() => {\n    async function getAcc() {\n      setActiveAccount(await wallet.client.getActiveAccount());\n      if (activeAccount) {\n        console.log(activeAccount.address)\n        setActiveAccount(await wallet.client.getActiveAccount());\n      }\n    }\n    getAcc();\n  }, [activeAccount]);\n\n  useEffect(() => {\n    async function getposts() {\n      const response = await axios.get(\n        `https://api.ghostnet.tzkt.io/v1/contracts/${contractAddress}/bigmaps/posts/keys`\n      );\n      const data = response.data.reverse();\n      console.log(data)\n\n      setPosts(data)\n    }\n    getposts();\n    async function getStorage() {\n\n      const colorsRes = await axios.get(\n        `https://api.ghostnet.tzkt.io/v1/contracts/KT1LTQAKNirVNk7C1bB7ji7rYPWgTytz8vwS/bigmaps/colors/keys`\n      );\n      setColors(colorsRes.data)\n      console.log(colorsRes.data)\n    }\n    getStorage();\n  }, []);\n\n  async function sync() {\n\n    try {\n      const permissions = await wallet.client.requestPermissions({\n        network: {\n          type: NetworkType.CUSTOM,\n          name: \"Ghostnet\",\n          rpcUrl: \"https://rpc.ghostnet.teztnets.xyz\",\n        },\n      });\n      console.log(\"Got permissions:\", permissions.address);\n      setActiveAccount(await wallet.client.getActiveAccount());\n    } catch (error) {\n      console.log(\"Got error:\", error);\n    }\n  }\n\n  async function unsync() {\n    await wallet.clearActiveAccount();\n    setActiveAccount(await wallet.client.getActiveAccount());\n  }\n\n  function getColor(address) {\n    console.log(\"test performance\")\n    for (let i = 0; i < colors.length; i++) {\n      if (colors[i].key === address) {\n        return colors[i].value;\n      }\n    }\n    return \"gray\"\n  }\n\n  return (\n    <div>\n      <div style={{ display: \"flex\" }}>\n        <Button\n          onClick={async () => {\n          }}\n        >\n          ONChain\n        </Button>\n\n        <Button\n          onClick={async () => {\n            if (activeAccount) {\n              unsync()\n            } else {\n              sync()\n            }\n          }}\n        >\n          {activeAccount ? \"unsync\" : \"sync\"}\n        </Button>\n      </div>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n\n        <div style={{ width: \"70vw\", marginTop: 20 }}>\n          <ButtonGame Tezos={Tezos} wallet={wallet} ></ButtonGame>\n          <div>\n            <TextField\n              label=\"Type here\"\n              variant=\"outlined\"\n              value={post}\n              onChange={handleChange}\n              fullWidth\n            />\n\n            <Button\n              fullWidth\n              onClick={async () => {\n                setLoading(true)\n                const contract = await Tezos.wallet.at(contractAddress);\n                try {\n                  const operation = await contract.methods.default(\n                    post\n                  ).send({ mutez: true, amount: 0 });\n\n                  const result = await operation.confirmation();\n                  const resultas = await contract.storage();\n                  console.log(result);\n                  console.log(resultas);\n                  setPost(\"\")\n                  setPosts([\n                    {\n                      value: {\n                        author: activeAccount.address,\n                        post: post\n                      }\n                    },\n                  ].concat(posts))\n                  setLoading(false)\n                } catch (error) {\n                  console.log(error)\n                  setLoading(false)\n                }\n\n              }}\n            >\n              {loading ? <img alt=\"loading\" src={spinner} style={{ width: 60 }} ></img> : \"Post\"}\n            </Button>\n\n            <div>\n              <br></br>\n              {posts &&\n                posts.map((post) => (\n                  <div key={post.key}>\n                    {post.value.post}\n                    <br></br>\n                    <div style={{ textAlign: \"right\" }}>\n                      <b style={{ color: \"black\", textAlign: \"right\", backgroundColor: getColor(post.value.author), padding: 10 }}>{post.value.author}</b>\n                    </div>\n                    <br></br>\n                    <br></br>\n                  </div>\n\n                ))\n              }\n            </div>\n          </div>\n\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}